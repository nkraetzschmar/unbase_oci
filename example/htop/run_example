#!/usr/bin/env bash

set -eufo pipefail

cd "$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

arch="$(podman system info --format json | jq -r '.host.arch')"
container_image="$(../../unbase_oci --print-container-image)"

while [ $# -gt 0 ]; do
	case "$1" in
		--arch)
			arch="$2"
			shift 2
			;;
		--container-image)
			container_image="$2"
			shift 2
			;;
		*)
			break
			;;
	esac
done

podman pull --arch "$arch" debian
podman save --format oci-archive debian > debian.oci

podman build --arch "$arch" --tag htop .
podman save --format oci-archive htop > htop.oci

../../unbase_oci --container-image "$container_image" --exclude exclude --dpkg-dependencies --dpkg-include dpkg_include --print-tree debian.oci htop.oci htop_distroless_dpkg.oci
image="$(podman load < htop_distroless_dpkg.oci | awk '{ print $NF }')"
podman tag "$image" htop:distroless_dpkg
podman run --rm htop:distroless_dpkg htop --version

../../unbase_oci --container-image "$container_image" --include include --exclude exclude --ldd-dependencies --print-tree debian.oci htop.oci htop_distroless.oci
image="$(podman load < htop_distroless.oci | awk '{ print $NF }')"
podman tag "$image" htop:distroless
podman run --rm htop:distroless htop --version

podman image list --sort size localhost/htop
